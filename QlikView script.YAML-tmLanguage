# [PackageDev] target_format: plist, ext: tmLanguage
name: QlikView script file
scopeName: source.qvs
fileTypes: [qvs]
uuid: 6b77dc03-7003-41f4-a9f6-287849f88d4f

patterns:
- include: '#subroutine'

- include: '#null_assignment'

- include: '#assignment'

- include: '#tab'

- include: '#comments'

- include: '#strings'

- include: '#numericLiterals'

- include: '#variables'

- include: '#qualifiers'

- include: '#functions'

- include: '#keyword'

- include: '#operators'

- include: '#tableIdentifiers'

- include: '#braces'


repository:
  braces:
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: support.constant.qvs}
      end: \)
      endCaptures:
        '0': {name: support.constant.qvs}
      patterns:
      - include: '#fileQualifiers'
      - include: '#functions'
      - include: '#variables'
      - include: '#braces'
      - include: '#strings'
      - include: '#numericLiterals'

  comments:
    patterns:
    - name: comment.line.double-dash.source.qvs
      begin: //
      end: $\n
    - name: comment.line.rem.source.qvs
      begin: '^\s*REM '
      end: $\n
    - name: comment.block.source.qvs
      begin: /\*
      end: \*/

  fileQualifiers:
    patterns:
    - name: support.constant.qvs
      match: (?i)(?<=\s|\(|,)(codepage is \d+|ansi|oem|mac|utf8|unicode|qvd|qvx|txt|fix|dif|biff|html|delimiter
        is|no eof|no quotes|msq|xmlsax|xmlsimple|no labels|embedded labels|explicit
        labels|no eof|msq|header is (\d+ lines)?|record is (\d+ lines)?)|table is

  functions:
    patterns:
    - begin: (?i)(\b|=)(if|getselectedcount|aggr|left|right|acos|addmonths|addyears|age|alt|applycodepage|applymap|argb|asin|atan|atan2|attribute|author|autonumber|autonumberhash128|autonumberhash256|avg|bitcount|black|blackandschole|blue|brown|capitalize|ceil|chi2test_chi2|chi2test_df|chi2test_p|chidist|chiinv|chr|class|clientplatform|color|colormaphue|colormapjet|colormix1|colormix2|combin|computername|concat|connectstring|converttolocaltime|correl|cos|cosh|count|cyan|darkgray|date|date#|day|dayend|daylightsaving|dayname|daynumberofquarter|daynumberofyear|daystart|div|DocumentName|DocumentPath|DocumentTitle|Dual|e|Evaluate|Even|Exists|exp|fabs|Fact|False|FDIST|FieldIndex|FieldName|FieldNumber|FieldValue|FieldValueCount|FileBaseName|FileDir|FileExtension|FileName|FilePath|FileSize|FileTime|FindOneOf|FINV|FirstSortedValue|FirstValue|FirstWorkDate|Floor|fmod|Frac|Fractile|FV|GetExtendedProperty|GetFolderPath|GetObjectField|GetRegistryString|GMT|Green|Hash128|Hash160|Hash256|Hour|HSL|InDay|InDayToTime|Index|InLunarWeek|InLunarWeekToDate|InMonth|InMonths|InMonthsToDate|InMonthToDate|Input|InputAvg|InputSum|InQuarter|InQuarterToDate|Interval|Interval#|InWeek|InWeekToDate|InYear|InYearToDate|IRR|IsNull|IsNum|IsPartialReload|IsText|IterNo|KeepChar|Kurtosis|LastValue|LastWorkDate|Len|LightBlue|LightCyan|LightGray|LightGreen|LightMagenta|LightRed|LINEST_B|LINEST_DF|LINEST_F|LINEST_M|LINEST_R2|LINEST_SEB|LINEST_SEM|LINEST_SEY|LINEST_SSREG|LINEST_SSRESID|LocalTime|log|log10|Lookup|Lower|LTrim|LunarWeekEnd|LunarWeekName|LunarWeekStart|Magenta|MakeDate|MakeTime|MakeWeekDate|MapSubString|Match|Max|MaxString|Median|Mid|Min|MinString|Minute|MissingCount|MixMatch|Mod|Mode|Money|Money#|Month|MonthEnd|MonthName|MonthsEnd|MonthsName|MonthsStart|MonthStart|MsgBox|NetWorkDays|NoOfFields|NoOfReports|NoOfRows|NoOfTables|NORMDIST|NORMINV|Now|nPer|NPV|Null|NullCount|Num|Num#|NumAvg|NumCount|NumericCount|NumMax|NumMin|NumSum|Odd|Only|Ord|OSUser|Peek|Permut|Pi|Pick|Pmt|pow|Previous|PurgeChar|PV|QlikTechBlue|QlikTechGray|QlikViewVersion|QuarterEnd|QuarterName|QuarterStart|QvdCreateTime|QvdFieldName|QvdNoOfFields|QvdNoOfRecords|QvdTableName|QVUser|Rand|RangeAvg|RangeCorrel|RangeCount|RangeFractile|RangeIRR|RangeKurtosis|RangeMax|RangeMaxString|RangeMin|RangeMinString|RangeMissingCount|RangeMode|RangeNPV|RangeNullCount|RangeNumericCount|RangeOnly|RangeSkew|RangeStdev|RangeSum|RangeTextCount|RangeXIRR|RangeXNPV|Rank|Rate|RecNo|Red|ReloadTime|Repeat|Replace|ReportComment|ReportId|ReportName|ReportNumber|RGB|Round|RowNo|RTrim|Second|SetDateYear|SetDateYearMonth|Sign|sin|sinh|Skew|sqr|sqrt|Stdev|Sterr|STEYX|SubField|SubStringCount|Sum|SysColor|TableName|TableNumber|tan|tanh|TDIST|Text|TextBetween|TextCount|Time|Time#|Timestamp|Timestamp#|TimeZone|TINV|Today|Trim|True|TTest1_conf|TTest1_df|TTest1_dif|TTest1_lower|TTest1_sig|TTest1_sterr|TTest1_t|TTest1_upper|TTest1w_conf|TTest1w_df|TTest1w_dif|TTest1w_lower|TTest1w_sig|TTest1w_sterr|TTest1w_t|TTest1w_upper|TTest_conf|TTest_df|TTest_dif|TTest_lower|TTest_sig|TTest_sterr|TTest_t|TTest_upper|TTestw_conf|TTestw_df|TTestw_dif|TTestw_lower|TTestw_sig|TTestw_sterr|TTestw_t|TTestw_upper|Upper|UTC|Week|WeekDay|WeekEnd|WeekName|WeekStart|WeekYear|White|WildMatch|WildMatch5|XIRR|XNPV|Year|Year2Date|YearEnd|YearName|YearStart|YearToDate|Yellow|ZTest_conf|ZTest_dif|ZTest_lower|ZTest_sig|ZTest_sterr|ZTest_upper|ZTest_z|ZTestw_conf|ZTestw_dif|ZTestw_lower|ZTestw_sig|ZTestw_sterr|ZTestw_upper|ZTestw_z)(\s*\()
      beginCaptures:
        '2': {name: entity.other.attribute-name.qvs}
        '3': {name: entity.other.attribute-name.qvs}
      end: \)
      endCaptures:
        '0': {name: entity.other.attribute-name.qvs}
      patterns:
      - include: '#comments'
      - include: '#variables'
      - include: '#functions'
      - include: '#qualifiers'
      - include: '#numericLiterals'
      - include: '#operators'
      - include: '#strings'
      - include: '#braces'

  keyword:
    patterns:
    - match: (?i)(^|\s)\b(SUB|NOT|OR|AND|ADD|ALIAS|ASC|BINARY|BUFFER|BUNDLE|CALL|COMMENT|CONCATENATE|CONNECT|CROSSTABLE|DESC|DIRECTORY|DISCONNECT|DO|DROP|EXECUTE|EACH|END|EXIT|FIELD|FIELDS|FIRST|FOR|FORCE|GENERIC|HIERARCHY|HIERARCHYBELONGSTO|THEN|ELSEIF|ELSE|ENDIF|IMAGE_SIZE|INFO|INNER|INPUTFIELD|INTERVALMATCH|JOIN|KEEP|LOAD|LOOSEN|MAPPING|MAP|USING|NOCONCATENATE|NULLASVALUE|NULLASNULL|OUTER|QUALIFY|RENAME|RIGHT|SAMPLE|SECTION|SELECT|SEMANTIC|SEMANTIC|SLEEP|SQL|SQLCOLUMNS|SQLTABLES|SQLTYPES|STAR|STORE|ENDSUB|SWITCH|CASE|DEFAULT|ENDSWITCH|TAG|TRACE|UNLESS|UNMAP|UNQUALIFY|UNTAG|WHEN|LOOP|NEXT|SCRIPT|TABLE|FROM|INTO|AS|INTO|TO|STEP|AUTOGENERATE|RESIDENT|WHILE|WHERE|ORDER|GROUP|BY|WITH)\b
      captures:
        '2': {name: keyword.control.qvs}
    - match: (?i)(^|\s)(LEFT|RIGHT|IF|REPLACE)(?!\()
      captures:
        '2': {name: keyword.control.qvs}

  numericLiterals:
    patterns:
    - match: (?<=\s|^|=|\(|,|>|<|\+|/|\*)(\-?\d+)(\.\d+)?
      captures:
        '1': {name: constant.numeric.qvs}
        '2': {name: constant.numeric.qvs}

  subroutine:
    patterns:
    - match: ^\s*([Ss][Uu][Bb])\s+((?:\w|\.)+)
      captures:
       '1': {name: keyword.control.qvs}
       '2': {name: support.class entity.name.type.subroutine.qvs}

  null_assignment:
    patterns:
    - match: ^\s*([LlSs][Ee][Tt])\s+(\w|\.)+\s*=\s*;
      captures:
       '1': {name: keyword.control.qvs}
  assignment:
    patterns:
    - match: ^\s*([LlSs][Ee][Tt])\s+((\w|\.)+)\s*=
      captures:
       '1': {name: keyword.control.qvs}
       '2': {name: entity.name.type.variable.qvs}

  tab:
    patterns:
    - match: ^(///\$tab) (.+)$
      captures:
       '1': {name: comment.line.double-dash.source.qvs}
       '2': {name: support.constant.qvs meta.tab.qvs}
  operators:
    patterns:
    - name: keyword.control.qvs
      match: (&|/)
    - name: keyword.control.qvs
      match: (?i)\b(AND|OR)\b

  qualifiers:
    patterns:
    - match: (?i)(DISTINCT|TOTAL)(\s|<)
      captures:
        '1': {name: keyword.control.qvs}

  strings:
    patterns:
    - name: string.double.quoted.qvs
      begin: '"'
      end: '"'
      patterns:
      - include: '#variables'
    - name: string.single.quoted.qvs
      begin: "'"
      end: "'"
      patterns:
      - include: '#variables'
    - name: string.single.quoted.qvs
      begin: \[
      end: \]
      patterns:
      - include: '#variables'

  tableIdentifiers:
    patterns:
    - name: support.constant.qvs
      match: ^(\s)*(\w+):(\s)*$
      captures:
        '2': {name: support.constant.qvs entity.name.type.table.qvs}
  variables:
    patterns:
    - name: variable.parameter.qvs
      begin: \$\(
      beginCaptures:
        '0': {name: variable.parameter.qvs}
      end: \)
      endCaptures:
        '0': {name: variable.parameter.qvs}
      patterns:
      - include: '#functions'
      - include: '#variables'
      - include: '#numericLiterals'
      - include: '#braces'
    - name: variable.parameter.qvs
      match: \$\d+
